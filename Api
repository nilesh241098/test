from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from generate_module import generate_content  # Replace with your actual generate_content function

app = FastAPI()

# Pydantic model for input validation
class PromptRequest(BaseModel):
    prompt: str

@app.post("/enumerator")
def enumerator_api(request: PromptRequest):
    """
    API endpoint to process prompts.
    """
    try:
        # Validate the prompt
        if not request.prompt.strip():  # Check if the prompt is empty or only whitespace
            raise HTTPException(status_code=400, detail="Prompt cannot be empty.")

        # Debug: Log the prompt
        print(f"Processing prompt: {request.prompt}")

        # Generate content
        response, hyperparameters = generate_content(request.prompt)

        # Return the result
        return {"response": response, "hyperparameters": hyperparameters}
    except Exception as e:
        print(f"Error processing prompt: {e}")
        raise HTTPException(status_code=500, detail=f"Error processing prompt: {str(e)}")ï¿¼Enter
